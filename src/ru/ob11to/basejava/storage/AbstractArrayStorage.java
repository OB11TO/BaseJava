package ru.ob11to.basejava.storage;

import ru.ob11to.basejava.model.Resume;

import java.util.Arrays;

public abstract class AbstractArrayStorage implements Storage {
    protected static final int STORAGE_LIMIT = 10000; //size mass

    protected final Resume[] storage = new Resume[STORAGE_LIMIT];  //–º–µ—Å—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
    protected int size = 0;  //—Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞

    public int size() {
        return size;
    } //—Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞

    public void clear() { //—á–∏—Å—Ç–∏–º –º–∞—Å—Å–∏–≤, –ø—Ä–æ–±–µ–≥–∞–µ–º –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –∏ —É–¥–∞–ª—è–µ–º —Ä–µ–∑—é–º–µ
        Arrays.fill(storage, 0, size, null);
        size = 0;
    }

    public void update(Resume r) { //–≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —Ä–µ–∑—é–º–µ
        int index = getIndex(r.getUuid());
        if (index == -1) {
            System.out.println("Resume " + r.getUuid() + " no existüëª");
        } else {
            storage[index] = r;
        }
    }

    public void save(Resume r) { // —Ä–∞—Å—à–∏—Ä—è–µ–º –º–∞—Å—Å–∏–≤ –Ω–∞ 1 –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—é–º–µ
        int index = getIndex(r.getUuid()); // –ø–æ–ª—É—á–∞–µ–º —á–∏—Å–ª–æ, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ–º —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω–æ–µ —Ä–µ–∑—é–º–µ
        if (!(index == -1)) {
            System.out.println("Resume " + r.getUuid() + " already exist");
        } else if (size > STORAGE_LIMIT) {
            System.out.println("Storage overflow");
        } else {
            //–ø—Ä–æ–ø–∏—à–µ–º –ª–æ–≥–∏–∫—É
            insertElement(r,index);
            size++; // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞
        }
    }


    public void delete(String uuid) { //–ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∑—é–º–µ
        int index = getIndex(uuid);
        if (index == -1) {
            System.out.println("Resume " + uuid + " no exist");
        } else {
            fillDeletedElement(index);
            storage[size - 1] = null;
            size--;
        }
    }

    public Resume get(String uuid) { // –ø—Ä–æ–±–µ–≥–∞–µ–º –ø–æ –º–∞—Å—Å–∏–≤—É, –µ—Å–ª–∏ —Ä–µ–∑—é–º–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ.
        int index = getIndex(uuid);
        if (index < 0) {
            System.out.println("Resume " + uuid + " no exist");
            return null;
        }
        return storage[index];
    }

    /**
     * @return array, contains only Resumes in ru.ob11to.basejava.storage (without null)
     * –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ä–µ–∑—é–º–µ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (–±–µ–∑ null)
     */
    public Resume[] getAll() {
        return Arrays.copyOfRange(storage, 0, size);
    }

    protected abstract int getIndex(String uuid);

    protected abstract void fillDeletedElement(int index);

    protected abstract void insertElement(Resume r,int index);
}
