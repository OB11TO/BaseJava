package ru.ob11to.basejava.storage;

import ru.ob11to.basejava.model.Resume;

/**
 * Array based ru.ob11to.basejava.storage for Resumes
 */
public class ArrayStorage {
    private final Resume[] storage = new Resume[10000];  //–º–µ—Å—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
    private int size = 0;  //—Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞

    public void clear() { //—á–∏—Å—Ç–∏–º –º–∞—Å—Å–∏–≤, –ø—Ä–æ–±–µ–≥–∞–µ–º –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –∏ —É–¥–∞–ª—è–µ–º —Ä–µ–∑—é–º–µ
        for (int i = 0; i < size; i++) {
            storage[i] = null;
        }
        size = 0;
    }

    public void update(Resume r) {
        int index = getIndex(r.getUuid());
        if (index == -1) {
            System.out.println("Resume " + r.getUuid() + " no existüëª");
        } else {
            storage[index] = r;
        }
    }

    public void save(Resume r) { // —Ä–∞—Å—à–∏—Ä—è–µ–º –º–∞—Å—Å–∏–≤ –Ω–∞ 1 –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—é–º–µ
        int index = getIndex(r.getUuid());
        if (!(index == -1)) {
            System.out.println("Resume " + r.getUuid() + " already exist");
        } else if (size > storage.length) {
            System.out.println("Storage overflow");
        } else {
            storage[size] = r;
            size++;
        }
    }


    public Resume get(String uuid) { // –ø—Ä–æ–±–µ–≥–∞–µ–º –ø–æ –º–∞—Å—Å–∏–≤—É, –µ—Å–ª–∏ —Ä–µ–∑—é–º–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ.
        int index = getIndex(uuid);
        if (index == -1) {
            System.out.println("Resume " + uuid + " no exist");
            return null;
        }
        return storage[index];
    }

    public void delete(String uuid) {
        int index = getIndex(uuid);
        if (index == -1) {
            System.out.println("Resume " + uuid + " no exist");
        } else {
            storage[index] = storage[size - 1];
            storage[size - 1] = null;
            size--;
        }



       /* for (int i = 0; i < size; i++) {
            if (uuid.equals(storage[i].getUuid())) {
                storage[i] = storage[size - 1];
                storage[size - 1] = null;
                size--;
            }
        }*/
    }

    /**
     * @return array, contains only Resumes in ru.ob11to.basejava.storage (without null)
     * –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ä–µ–∑—é–º–µ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (–±–µ–∑ null)
     */
    public Resume[] getAll() {
        Resume[] result = new Resume[size];
        System.arraycopy(storage, 0, result, 0, size);
        return result;
    }

    public int size() {
        return size;
    }

    private int getIndex(String uuid) {
        for (int i = 0; i < size; i++) {
            if (uuid.equals(storage[i].getUuid())) {
                return i;
            }
        }
        return -1;
    }
}
